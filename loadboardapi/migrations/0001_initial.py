# Generated by Django 3.2.12 on 2022-04-08 16:35

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assigndrivers',
            fields=[
                ('assignid', models.UUIDField(db_column='AssignId', primary_key=True, serialize=False)),
                ('assigned', models.BooleanField(blank=True, db_column='Assigned', null=True)),
                ('assigneddate', models.DateTimeField(blank=True, db_column='AssignedDate', null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
            ],
            options={
                'db_table': 'AssignDrivers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Assignshipments',
            fields=[
                ('assignshipmentid', models.UUIDField(db_column='AssignShipmentId', primary_key=True, serialize=False)),
                ('isassigned', models.BooleanField(blank=True, db_column='IsAssigned', null=True)),
                ('assigneddate', models.DateTimeField(blank=True, db_column='AssignedDate', null=True)),
                ('assignedto', models.CharField(blank=True, db_column='AssignedTo', max_length=255, null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
            ],
            options={
                'db_table': 'AssignShipments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Carriers',
            fields=[
                ('carrierid', models.UUIDField(db_column='CarrierId', primary_key=True, serialize=False)),
                ('carriertype', models.CharField(blank=True, db_column='CarrierType', max_length=255, null=True)),
                ('fleettype', models.CharField(blank=True, db_column='FleetType', max_length=255, null=True)),
                ('fleetnumber', models.CharField(blank=True, db_column='FleetNumber', max_length=255, null=True)),
                ('aboutus', models.CharField(blank=True, db_column='AboutUs', max_length=255, null=True)),
                ('servicedescription', models.CharField(blank=True, db_column='ServiceDescription', max_length=255, null=True)),
                ('rating', models.IntegerField(blank=True, db_column='Rating', null=True)),
                ('licensed', models.BooleanField(blank=True, db_column='Licensed', null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
            ],
            options={
                'db_table': 'Carriers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Companys',
            fields=[
                ('companyid', models.AutoField(db_column='CompanyId', primary_key=True, serialize=False)),
                ('companyname', models.CharField(blank=True, db_column='CompanyName', max_length=255, null=True)),
                ('contactemail', models.CharField(blank=True, db_column='ContactEmail', max_length=255, null=True)),
                ('contactphone', models.CharField(blank=True, db_column='ContactPhone', max_length=255, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=255, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=255, null=True)),
                ('region', models.CharField(blank=True, db_column='Region', max_length=255, null=True)),
                ('companytype', models.CharField(blank=True, db_column='CompanyType', max_length=255, null=True)),
                ('specilaization', models.CharField(blank=True, db_column='Specilaization', max_length=255, null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
            ],
            options={
                'db_table': 'Companys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Drivers',
            fields=[
                ('driverid', models.UUIDField(db_column='DriverId', primary_key=True, serialize=False)),
                ('drivername', models.CharField(blank=True, db_column='DriverName', max_length=255, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=255, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=255, null=True)),
                ('secondaryphone', models.CharField(blank=True, db_column='SecondaryPhone', max_length=255, null=True)),
                ('dob', models.DateField(blank=True, db_column='DOB', null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=255, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=255, null=True)),
                ('region', models.CharField(blank=True, db_column='Region', max_length=255, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=255, null=True)),
                ('picurl', models.CharField(blank=True, db_column='PicUrl', max_length=255, null=True)),
                ('licensed', models.BooleanField(blank=True, db_column='Licensed', null=True)),
                ('licenseurl', models.CharField(blank=True, db_column='LicenseUrl', max_length=255, null=True)),
                ('rating', models.IntegerField(blank=True, db_column='Rating', null=True)),
                ('driverdocs', models.CharField(blank=True, db_column='DriverDocs', max_length=255, null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
            ],
            options={
                'db_table': 'Drivers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Insurances',
            fields=[
                ('insuranceid', models.AutoField(db_column='InsuranceId', primary_key=True, serialize=False)),
                ('shipmentid', models.CharField(blank=True, db_column='ShipmentId', max_length=255, null=True)),
                ('companyid', models.IntegerField(blank=True, db_column='CompanyId', null=True)),
                ('insurancename', models.CharField(blank=True, db_column='InsuranceName', max_length=255, null=True)),
                ('insurancetype', models.CharField(blank=True, db_column='InsuranceType', max_length=255, null=True)),
                ('insurer', models.CharField(blank=True, db_column='Insurer', max_length=255, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=255, null=True)),
                ('insurerancedoc', models.CharField(blank=True, db_column='InsureranceDoc', max_length=255, null=True)),
                ('rating', models.IntegerField(blank=True, db_column='Rating', null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
            ],
            options={
                'db_table': 'Insurances',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Medias',
            fields=[
                ('mediaid', models.AutoField(db_column='MediaId', primary_key=True, serialize=False)),
                ('refid', models.CharField(blank=True, db_column='RefId', max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('uploaddate', models.DateField(blank=True, db_column='UploadDate', null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
                ('filename', models.TextField(blank=True, db_column='FileName', null=True)),
                ('filetype', models.TextField(blank=True, db_column='FileType', null=True)),
            ],
            options={
                'db_table': 'Medias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orderid', models.CharField(blank=True, db_column='OrderId', max_length=255, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserId', max_length=255, null=True)),
                ('totalprice', models.DecimalField(blank=True, db_column='TotalPrice', decimal_places=65535, max_digits=65535, null=True)),
                ('paymentsessionid', models.CharField(blank=True, db_column='PaymentSessionId', max_length=255, null=True)),
                ('ispaymentsuccessful', models.BooleanField(blank=True, db_column='IsPaymentSuccessful', null=True)),
                ('orderstatus', models.CharField(blank=True, db_column='OrderStatus', max_length=255, null=True)),
                ('orderdate', models.DateTimeField(blank=True, db_column='OrderDate', null=True)),
                ('paymentmethod', models.CharField(blank=True, db_column='PaymentMethod', max_length=255, null=True)),
                ('currency', models.CharField(blank=True, db_column='Currency', max_length=255, null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
            ],
            options={
                'db_table': 'Orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('paymentid', models.AutoField(db_column='PaymentId', primary_key=True, serialize=False)),
                ('totalprice', models.DecimalField(blank=True, db_column='TotalPrice', decimal_places=65535, max_digits=65535, null=True)),
                ('paymentsessionid', models.CharField(blank=True, db_column='PaymentSessionId', max_length=255, null=True)),
                ('referenceid', models.CharField(blank=True, db_column='ReferenceId', max_length=255, null=True)),
                ('orderstatus', models.CharField(blank=True, db_column='OrderStatus', max_length=255, null=True)),
                ('paymentmethod', models.CharField(blank=True, db_column='PaymentMethod', max_length=255, null=True)),
                ('paymentdate', models.DateField(blank=True, db_column='PaymentDate', null=True)),
                ('currency', models.CharField(blank=True, db_column='Currency', max_length=255, null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
            ],
            options={
                'db_table': 'Payments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('roleid', models.UUIDField(db_column='RoleId', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
            ],
            options={
                'db_table': 'Roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shipments',
            fields=[
                ('shipmentid', models.UUIDField(db_column='ShipmentId', primary_key=True, serialize=False)),
                ('loadcategory', models.CharField(blank=True, db_column='LoadCategory', max_length=255, null=True)),
                ('loadtype', models.CharField(blank=True, db_column='LoadType', max_length=255, null=True)),
                ('loadweight', models.DecimalField(blank=True, db_column='LoadWeight', decimal_places=2, max_digits=10, null=True)),
                ('loadunit', models.CharField(blank=True, db_column='LoadUnit', max_length=255, null=True)),
                ('qty', models.IntegerField(blank=True, db_column='Qty', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('pickupcountry', models.CharField(blank=True, db_column='PickUpCountry', max_length=255, null=True)),
                ('pickupregion', models.CharField(blank=True, db_column='PickUpRegion', max_length=255, null=True)),
                ('pickuplocation', models.CharField(blank=True, db_column='PickUpLocation', max_length=255, null=True)),
                ('deliverycountry', models.CharField(blank=True, db_column='DeliveryCountry', max_length=255, null=True)),
                ('deliveryregion', models.CharField(blank=True, db_column='DeliveryRegion', max_length=255, null=True)),
                ('deliverylocation', models.CharField(blank=True, db_column='DeliveryLocation', max_length=255, null=True)),
                ('expectedpickupdate', models.DateField(blank=True, db_column='ExpectedPickUpDate', null=True)),
                ('expecteddeliverydate', models.DateField(blank=True, db_column='ExpectedDeliveryDate', null=True)),
                ('requestforshipment', models.CharField(blank=True, db_column='RequestForShipment', max_length=255, null=True)),
                ('shipmentrequestprice', models.DecimalField(blank=True, db_column='ShipmentRequestPrice', decimal_places=2, max_digits=10, null=True)),
                ('deliverycontactname', models.CharField(blank=True, db_column='DeliveryContactName', max_length=255, null=True)),
                ('deliverycontactphone', models.CharField(blank=True, db_column='DeliveryContactPhone', max_length=255, null=True)),
                ('deliveryemail', models.CharField(blank=True, db_column='DeliveryEmail', max_length=255, null=True)),
                ('assignedshipment', models.BooleanField(blank=True, db_column='AssignedShipment', null=True)),
                ('shipmentdate', models.DateField(blank=True, db_column='ShipmentDate', null=True)),
                ('shipmentdocs', models.CharField(blank=True, db_column='ShipmentDocs', max_length=255, null=True)),
                ('shipmentstatus', models.CharField(blank=True, db_column='ShipmentStatus', max_length=255, null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
            ],
            options={
                'db_table': 'Shipments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shipmentsinteresteds',
            fields=[
                ('shipmentinterestid', models.UUIDField(db_column='ShipmentInterestId', primary_key=True, serialize=False)),
                ('carrierid', models.CharField(blank=True, db_column='CarrierId', max_length=255, null=True)),
                ('isinterested', models.BooleanField(blank=True, db_column='IsInterested', null=True)),
                ('interestdate', models.DateField(blank=True, db_column='InterestDate', null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
            ],
            options={
                'db_table': 'ShipmentsInteresteds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subscriptions',
            fields=[
                ('subscribeid', models.AutoField(db_column='SubscribeId', primary_key=True, serialize=False)),
                ('subscriptiontype', models.CharField(blank=True, db_column='SubscriptionType', max_length=255, null=True)),
                ('subscriptionname', models.CharField(blank=True, db_column='SubscriptionName', max_length=255, null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=65535, max_digits=65535, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('active', models.BooleanField(blank=True, db_column='Active', null=True)),
                ('duration', models.IntegerField(blank=True, db_column='Duration', null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
            ],
            options={
                'db_table': 'Subscriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tracks',
            fields=[
                ('trackid', models.AutoField(db_column='TrackId', primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=255, null=True)),
                ('tracknote', models.CharField(blank=True, db_column='TrackNote', max_length=255, null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
            ],
            options={
                'db_table': 'Tracks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trips',
            fields=[
                ('tripid', models.UUIDField(db_column='TripId', primary_key=True, serialize=False)),
                ('pickuplocation', models.CharField(blank=True, db_column='PickUpLocation', max_length=255, null=True)),
                ('deliverylocation', models.CharField(blank=True, db_column='DeliveryLocation', max_length=255, null=True)),
                ('pickupdate', models.DateField(blank=True, db_column='PickUpDate', null=True)),
                ('duration', models.CharField(blank=True, db_column='Duration', max_length=255, null=True)),
                ('deliverydate', models.DateField(blank=True, db_column='DeliveryDate', null=True)),
                ('drivernote', models.CharField(blank=True, db_column='DriverNote', max_length=255, null=True)),
                ('rating', models.IntegerField(blank=True, db_column='Rating', null=True)),
                ('review', models.CharField(blank=True, db_column='Review', max_length=255, null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
            ],
            options={
                'db_table': 'Trips',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userroles',
            fields=[
                ('userroleid', models.UUIDField(db_column='UserRoleId', primary_key=True, serialize=False)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
            ],
            options={
                'db_table': 'UserRoles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('userid', models.UUIDField(db_column='UserId', primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', max_length=255, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', max_length=255, null=True)),
                ('fullname', models.CharField(blank=True, db_column='FullName', max_length=255, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=255, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=255, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=255, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=255, null=True)),
                ('region', models.CharField(blank=True, db_column='Region', max_length=255, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=255, null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=255, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=255, null=True)),
                ('userpicurl', models.CharField(blank=True, db_column='UserPicUrl', max_length=255, null=True)),
                ('token', models.CharField(blank=True, db_column='Token', max_length=255, null=True)),
                ('isactivated', models.BooleanField(blank=True, db_column='IsActivated', null=True)),
                ('acceptterms', models.BooleanField(blank=True, db_column='AcceptTerms', null=True)),
                ('logincount', models.IntegerField(blank=True, db_column='LoginCount', null=True)),
                ('paymentmethod', models.CharField(blank=True, db_column='PaymentMethod', max_length=255, null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
                ('currency', models.TextField(blank=True, db_column='Currency', null=True)),
            ],
            options={
                'db_table': 'Users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usersubscriptions',
            fields=[
                ('usersubscriptionid', models.AutoField(db_column='UserSubscriptionId', primary_key=True, serialize=False)),
                ('subscriptionname', models.CharField(blank=True, db_column='SubscriptionName', max_length=255, null=True)),
                ('active', models.BooleanField(blank=True, db_column='Active', null=True)),
                ('startdate', models.DateField(blank=True, db_column='StartDate', null=True)),
                ('enddate', models.DateField(blank=True, db_column='EndDate', null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
            ],
            options={
                'db_table': 'UserSubscriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vehicles',
            fields=[
                ('vehicleid', models.UUIDField(db_column='VehicleId', primary_key=True, serialize=False)),
                ('vehicletype', models.CharField(blank=True, db_column='VehicleType', max_length=255, null=True)),
                ('vehiclenumber', models.CharField(blank=True, db_column='VehicleNumber', max_length=255, null=True)),
                ('serialnumber', models.CharField(blank=True, db_column='SerialNumber', max_length=255, null=True)),
                ('vehiclemake', models.CharField(blank=True, db_column='VehicleMake', max_length=255, null=True)),
                ('vehiclecolor', models.CharField(blank=True, db_column='VehicleColor', max_length=255, null=True)),
                ('vehiclemodel', models.CharField(blank=True, db_column='VehicleModel', max_length=255, null=True)),
                ('licenseplate', models.CharField(blank=True, db_column='LicensePlate', max_length=255, null=True)),
                ('vehiclemodelyear', models.DateField(blank=True, db_column='VehicleModelYear', null=True)),
                ('purchaseyear', models.DateField(blank=True, db_column='PurchaseYear', null=True)),
                ('insured', models.BooleanField(blank=True, db_column='Insured', null=True)),
                ('picurl', models.CharField(blank=True, db_column='PicUrl', max_length=255, null=True)),
                ('vehicledocs', models.CharField(blank=True, db_column='VehicleDocs', max_length=255, null=True)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('updatedat', models.DateTimeField(db_column='updatedAt')),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
            ],
            options={
                'db_table': 'Vehicles',
                'managed': False,
            },
        ),
    ]
